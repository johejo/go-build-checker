name: build
on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * *"
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        go-version: ["tip"]
        go-amd64: ["v3"]
        include:
          - target: "juju/juju"
            deps: []
          - target: "kubernetes/ingress-nginx"
            deps: []
          - target: "hashicorp/terraform"
            deps: []
          - target: "hashicorp/consul"
            deps: []
          - target: "hashicorp/vault"
            deps: []
          - target: "hashicorp/nomad"
            deps: []
          - target: "hashicorp/packer"
            deps: []
          - target: "hashicorp/boundary"
            deps: []
          - target: "hashicorp/waypoint"
            deps: []
          - target: "prometheus/prometheus"
            deps: []
          - target: "grpc-ecosystem/grpc-gateway"
            deps: []
          - target: "minio/minio"
            deps: []
          - target: "golangci/golangci-lint"
            deps: []
          - target: "argoproj/argo-cd"
            deps: []
          - target: "argoproj/argo-rollouts"
            deps: []
          - target: "argoproj/argo-events"
            deps: []
          - target: "ory/kratos"
            deps: []
          - target: "ory/hydra"
            deps: []
          - target: "ory/keto"
            deps: []
          - target: "grafana/loki"
            deps: []
          - target: "grafana/k6"
            deps: []
          - target: "grafana/tempo"
            deps: []
          - target: "golang-migrate/migrate"
            deps: []
          - target: "terraform-linters/tflint"
            deps: []
          - target: "gomods/athens"
            deps: []
          - target: "future-architect/vuls"
            deps: []
          - target: "etcd-io/etcd"
            deps: []
          - target: "jaegertracing/jaeger"
            deps: []
          - target: "VictoriaMetrics/VictoriaMetrics"
            deps: []
          - target: "helm/helm"
            deps: []
          - target: "go-gitea/gitea"
            deps: []
          - target: "rclone/rclone"
            deps: []
          - target: "uber/cadence"
            deps: []
          - target: "coredns/coredns"
            deps: []
          - target: "rook/rook"
            deps: []
          - target: "open-policy-agent/opa"
            deps: []
          - target: "nats-io/nats-server"
            deps: []
          - target: "spiffe/spire"
            deps: []
          - target: "thanos-io/thanos"
            deps: []
          - target: "buildpacks/pack"
            deps: []
          - target: "GoogleContainerTools/kaniko"
            deps: []
          - target: "GoogleContainerTools/skaffold"
            deps: []
          - target: "tektoncd/pipeline"
            deps: []
          - target: "knative/serving"
            deps: []
          - target: "goreleaser/goreleaser"
            deps: []
          - target: "GoogleCloudPlatform/terraformer"
            deps: []
          - target: "rqlite/rqlite"
            deps: []
          - target: "go-delve/delve"
            deps: []
          - target: "cilium/cilium"
            deps: []
          - target: "containerd/containerd"
            deps: []
          - target: "projectcontour/contour"
            deps: []
          - target: "dgraph-io/badger"
            deps: []
          - target: "perkeep/perkeep"
            deps: []
          - target: "operator-framework/operator-sdk"
            deps: []
          - target: "openshift/oc"
            deps: []
          - target: "restic/restic"
            deps: []
          - target: "99designs/gqlgen"
            deps: []
          - target: "slackhq/nebula"
            deps: []
          - target: "schollz/croc"
            deps: []
          - target: "authelia/authelia"
            deps: []
          - target: "linkerd/linkerd2"
            deps: []
          - target: "containrrr/watchtower"
            deps: []
          - target: "projectdiscovery/httpx"
            deps: []
          - target: "ethereum/go-ethereum"
            deps: []
          - target: "nsqio/nsq"
            deps: []
          - target: "kedacore/keda"
            deps: []
          - target: "open-telemetry/opentelemetry-collector"
            deps: []
          - target: "gohugoio/hugo"
            deps: []
          - target: "derailed/k9s"
            deps: []
          - target: "cayleygraph/cayley"
            deps: []
          - target: "kubernetes/kops"
            deps: []
          - target: "gopherjs/gopherjs"
            deps: []
          - target: "quay/clair"
            deps: []
          - target: "codenotary/immudb"
            deps: []
          - target: "flannel-io/flannel"
            deps: []
          - target: "OWASP/Amass"
            deps: []
          - target: "weaveworks/ignite"
            deps: []
          - target: "concourse/concourse"
            deps: []
          - target: "vmware-tanzu/octant"
            deps: []
          - target: "moby/buildkit"
            deps: []
          - target: "tendermint/tendermint"
            deps: []
          - target: "runatlantis/atlantis"
            deps: []
          - target: "aquasecurity/tfsec"
            deps: []
          - target: "rh12503/triangula"
            deps: []
          - target: "emitter-io/emitter"
            deps: []
          - target: "benthosdev/benthos"
            deps: []
          - target: "cortexproject/cortex"
            deps: []
    runs-on: ${{ matrix.os }}
    env:
      GOAMD64: ${{ matrix.go-amd64 }}
      GOCMD: go${{ matrix.go-version }}
      DEPS: ${{ join(matrix.deps, ' ') }}
    steps:
      - name: install deps
        if: ${{ env.DEPS != '' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y "$DEPS"
      - uses: actions/setup-go@v5
      - name: install tip
        run: |
          go install "golang.org/dl/$GOCMD@latest"
          $GOCMD download
      - name: print version and env info
        run: |
          $GOCMD version
          $GOCMD env
      - uses: actions/checkout@v4
        with:
          repository: ${{ matrix.target }}
          submodules: true
      - run: $GOCMD build ./...
